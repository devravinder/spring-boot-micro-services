
ext {
    dockerImageName = "devravinder/bookstore-${project.name}:${project.version}"
}
bootBuildImage {
    imageName = dockerImageName
}
dependencies {

    // spring boot starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // utility
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // data base
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    // open api
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // Resilience4j
    implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'


    // Shedlock
    implementation 'net.javacrumbs.shedlock:shedlock-spring:6.0.2'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:6.0.2'

    // Micrometer
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    // test
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.testcontainers:rabbitmq'
    testImplementation 'org.instancio:instancio-junit:5.2.1'
    testImplementation 'org.wiremock:wiremock-standalone:3.10.0'
    testImplementation 'org.wiremock.integrations.testcontainers:wiremock-testcontainers-module:1.0-alpha-14'



    // Spring Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'



    // dev
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


}
compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}
